{"version":3,"sources":["Themes.js","NavBar/NavBar.jsx","App.js","LocalStorage.js","reportWebVitals.js","index.js"],"names":["lightTheme","body","fontColor","navBackground","navTileBackground","oppColor","darkTheme","GlobalStyles","createGlobalStyle","props","theme","NavBar","onToggle","useState","active","changeActive","className","onClick","size","type","id","onChange","checked","htmlFor","StyledApp","styled","div","App","defaultValue","key","React","stickyValue","window","localStorage","getItem","console","log","JSON","parse","value","setValue","useEffect","setItem","stringify","useStickyState","setTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65fdeb71.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const lightTheme = {\n    body: \"var(--blue-background)\",\n    fontColor: \"var(--black)\",\n    navBackground: \"var(--blue-color)\",\n    navTileBackground: \"var(--baby-pink-background)\",\n    oppColor: \"var(--black)\"\n};\n\nexport const darkTheme = {\n    body: \"var(--indigo-background)\",\n    fontColor: \"var(--black)\",\n    navBackground: \"var(--indigo-color)\",\n    navTileBackground: \"var(--pink-background)\",\n    oppColor: \"var(--white)\"\n};\n\nexport const GlobalStyles = createGlobalStyle `\n\tbody {\n\t\tbackground-color: ${(props) => props.theme.body};\n\t}\n  .nav-container {\n    background-color: ${(props) => props.theme.navBackground};\n    color: ${(props) => props.theme.oppColor};\n  }\n  .nav-container .active {\n    background-color: ${(props) => props.theme.navTileBackground};\n    color: ${(props) => props.theme.fontColor};\n  }\n`;","import './NavBar.css';\nimport { FaHome } from 'react-icons/fa';\nimport { GrProjects, GrContact } from 'react-icons/gr';\nimport { ImProfile } from 'react-icons/im';\nimport { GiSoapExperiment, GiRead } from 'react-icons/gi';\nimport { useState } from 'react';\n\n\nconst NavBar = ({ onToggle, theme }) => {\n\n    const [active, changeActive] = useState('home');\n    return (\n        <div className=\"nav-container\">\n            <div className=\"left\">\n                <div className={\"nav-tile \"+ (active==='home'?'active':'')} onClick={() => {changeActive('home')}}>\n                    <div className=\"icon\">\n                        <FaHome size=\"5em\" />\n                    </div>\n                    <div className=\"title\">\n                        Home\n                    </div>\n                </div>\n                <div className={\"nav-tile \"+ (active==='projects'?'active':'')} onClick={() => {changeActive('projects')}}>\n                    <div className=\"icon\">\n                        <GrProjects size=\"5em\" />\n                    </div>\n                    <div className=\"title\">\n                        Projects\n                    </div>\n                </div>\n                <div className={\"nav-tile \"+ (active==='about'?'active':'')} onClick={() => {changeActive('about')}}>\n                    <div className=\"icon\">\n                        <ImProfile size=\"5em\" />\n                    </div>\n                    <div className=\"title\">\n                        About\n                    </div>\n                </div>\n                <div className={\"nav-tile \"+ (active==='training'?'active':'')} onClick={() => {changeActive('training')}}>\n                    <div className=\"icon\">\n                        <GiRead size=\"5em\" />\n                    </div>\n                    <div className=\"title\">\n                        Training\n                    </div>\n                </div>\n                <div className={\"nav-tile \"+ (active==='exp'?'active':'')} onClick={() => {changeActive('exp')}}>\n                    <div className=\"icon\">\n                        <GiSoapExperiment size=\"5em\" />\n                    </div>\n                    <div className=\"title\">\n                        Experiments\n                    </div>\n                </div>\n                <div className={\"nav-tile \"+ (active==='contact'?'active':'')} onClick={() => {changeActive('contact')}}>\n                    <div className=\"icon\">\n                        <GrContact size=\"5em\" />\n                    </div>\n                    <div className=\"title\">\n                        Contact\n                    </div>\n                </div>\n            </div>\n            <div className=\"right\">\n                <input type=\"checkbox\" id=\"toggle\" className=\"toggle--checkbox\" onChange={onToggle} checked={theme === 'dark'} />\n                <label htmlFor=\"toggle\" className=\"toggle--label\">\n                    <span className=\"toggle--label-background\"></span>\n                </label>\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar\n\n","import \"./App.css\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"./Themes.js\";\nimport { useStickyState } from \"./LocalStorage\";\nimport NavBar from \"./NavBar/NavBar.jsx\";\n\nconst StyledApp = styled.div`\n  color: ${(props) => props.theme.fontColor};\n`;\n\nfunction App() {\n  const [theme, setTheme] = useStickyState(\"light\", \"theme\");\n\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <StyledApp>\n        <div className=\"navbar\">\n          <NavBar onToggle={themeToggler} theme={theme} />\n        </div>\n        <div className=\"background\">{<h1>{theme} mode activated</h1> } </div>\n      </StyledApp>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react'\n\nexport function useStickyState(defaultValue, key) {\n    const [value, setValue] = React.useState(() => {\n      const stickyValue = window.localStorage.getItem(key);\n      console.log('from local', stickyValue);\n      return stickyValue !== null\n        ? JSON.parse(stickyValue)\n        : defaultValue;\n    });\n    React.useEffect(() => {\n      window.localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n    return [value, setValue];\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}